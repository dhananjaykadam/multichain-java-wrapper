<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.server</groupId>
	<artifactId>multichain</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>multichain</name>
	<url>http://maven.apache.org</url>

	<modules>
		<module>integration-multichain</module>
	</modules>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<integration-multichain>1.0.0-SNAPSHOT</integration-multichain>
		<localdev-host>http://localhost:8080/manager/text</localdev-host>
		<tomcat-server-name>TomcatServer</tomcat-server-name>
	</properties>
	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>Athens-RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>OSGEO GeoTools repo</id>
			<url>http://download.osgeo.org/webdav/geotools</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>maven-remote</name>
			<url>http://repo.maven.apache.org/maven2/</url>
		</repository>
	</repositories>

	<dependencies>
		
	
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jcraft/jsch -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
		</dependency>

	</dependencies>

	<build>
		<finalName>multichain</finalName>
		<plugins>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-deploy-plugin</artifactId> 
				<version>2.7</version> </plugin> <plugin> <groupId>com.googlecode.maven-java-formatter-plugin</groupId> 
				<artifactId>maven-java-formatter-plugin</artifactId> <version>0.4</version> 
				<configuration> <configFile>${project.basedir}/../deploy-tools/eclipse-java-google-style.xml</configFile> 
				<lineEnding>LF</lineEnding> <encoding>UTF-8</encoding> <directories> <directory>${basedir}/src/main/java</directory> 
				<directory>${basedir}/src/test/java</directory> </directories> </configuration> 
				<executions> <execution> <goals> <goal>format</goal> </goals> </execution> 
				</executions> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.0.RC2</version>
				<configuration>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<webAppConfig>
						<defaultsDescriptor>src/main/resources/webdefault.xml</defaultsDescriptor>
					</webAppConfig>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<reportPlugins>
						<!-- Cobertura Plugin -->
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.5.1</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.googlecode.maven-java-formatter-plugin
										</groupId>
										<artifactId>maven-java-formatter-plugin</artifactId>
										<versionRange>[0.4,)</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.14</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>it</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>create-directory-and-copy-resources</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo message="Creating Directory ${integrationOutputDirectory}" />
										<mkdir dir="${integrationOutputDirectory}" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>add-test-sources</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${integrationSourceDirectory}/java</source>
									</sources>
								</configuration>
							</execution>
							<execution>
								<id>add-test-resources</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>add-test-resource</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${integrationSourceDirectory}/java</directory>
											<targetPath>${integrationOutputDirectory}</targetPath>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.2</version>
						<executions>
							<execution>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>testCompile</goal>
								</goals>
								<configuration>
									<compilerVersion>1.8</compilerVersion>
									<compilerArguments>
										<d>${integrationOutputDirectory}</d>
									</compilerArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.8</version>
						<configuration>
							<testClassesDirectory>${integrationOutputDirectory}</testClassesDirectory>
							<reportsDirectory>${integrationOutputDirectory}/failsafe-reports</reportsDirectory>
							<includes>
								<include>**/*IntegrationTest*</include>
							</includes>
							<!-- <test>**/*.java</test> -->
							<additionalClasspathelements>
								<additionalClasspathelement>${integrationSourceDirectory}/resources</additionalClasspathelement>
							</additionalClasspathelements>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<integrationSourceDirectory>${basedir}/src/integrationtest</integrationSourceDirectory>
				<integrationOutputDirectory>${basedir}/target/integrationtest-classes</integrationOutputDirectory>
			</properties>
		</profile>
	</profiles>

</project>

